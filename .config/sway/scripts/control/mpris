#!/bin/bash

get_art_path() {
	local cache_dir="$HOME/.cache/mpris"
	if [ ! -d "$cache_dir" ]; then
		mkdir -p "$cache_dir"
	fi
	local -r player=$(mprisctl --display-mpris-properties Player)
	if [[ "$player" == "org.mpris.MediaPlayer2.cmus" ]]; then
		if [ ! -d "$player" ]; then
			mkdir -p "$cache_dir/$player"
		fi
		local -r artist=$(cmus-remote -Q | grep -w 'tag artist' | cut -d ' ' -f 3-)
		local -r album=$(cmus-remote -Q | grep -w 'tag album' | cut -d ' ' -f 3-)
		local -r art_path="$cache_dir/$player/""$artist"_"$album".png
		if [ ! -e "$art_path" ]; then
			local -r song_filepath=$(cmus-remote -Q | grep 'file' | cut -d ' ' -f 2-)
			ffmpeg -loglevel quiet -i "$song_filepath" -an -vcodec copy "$art_path"
		fi
		printf "%s" "$art_path"
	elif [[ "$player" =~ org\.mpris\.MediaPlayer2\.firefox ]]; then
		local -r art_url=$(mprisctl --display-metadata mpris:artUrl)
		printf "%s" "${art_url#file://}"
	else
		local -r art_url=$(mprisctl --display-metadata mpris:artUrl)
		if [[ "$art_url" == file://* ]]; then
			printf "%s" "${art_url#file://}"
		elif [[ "$art_url" == https://* ]]; then
			if [ ! -d "$player" ]; then
				mkdir -p "$cache_dir/$player"
			fi
			local -r art_path="$cache_dir/$player'_'$(basename "$art_url")"
			if [ ! -e "$art_path" ]; then
				wget -q "$art_url" -O "$art_path"
			fi
			printf "%s" "$art_path"
		fi
	fi
}

convert_time() {
	local micro="$1"
	local min=$((micro / 60000000))
	local sec=$((micro / 1000000 % 60))
	printf "%02d:%02d" "$min" "$sec"
}

notify() {
	local -r artist=$(mprisctl --display-metadata xesam:artist)
	local -r album=$(mprisctl --display-metadata xesam:album)
	local -r title=$(mprisctl --display-metadata xesam:title)
	local -r art_path=$(get_art_path)
	notify-send -a "mpris" "$title" "${artist:+$artist}${album:+\n$album}" -i "${art_path:- }" -u low -t 2000
}

notify_progress() {
	local -r artist=$(mprisctl --display-metadata xesam:artist)
	local -r album=$(mprisctl --display-metadata xesam:album)
	local -r title=$(mprisctl --display-metadata xesam:title)
	local -r art_path=$(get_art_path)
	local -r duration=$(mprisctl --display-metadata mpris:length)
	local -r position=$(mprisctl --display-player-properties Position)
	local -r time="$(convert_time "$position") / $(convert_time "$duration")"
	local -r progress=$((position * 100 / duration))
	notify-send -a "mpris" "$title" "${artist:+$artist}${album:+\n$album}\n$time" -i "${art_path:- }" -u low -t 2000 -h int:value:$progress
}

notify_volume() {
	local -r artist=$(mprisctl --display-metadata xesam:artist)
	local -r album=$(mprisctl --display-metadata xesam:album)
	local -r title=$(mprisctl --display-metadata xesam:title)
	local -r art_path=$(get_art_path)
	local -r volume=$(mprisctl --display-player-properties Volume | awk '{print int($1 * 100)}')
	notify-send -a "control" "$title" "${artist:+$artist}${album:+\n$album}\n<b>Volume ${volume}%</b>" -i "${art_path:- }" -u low -t 2000 -h int:value:"$volume"
}

increment_volume() {
	mprisctl -i 0.05
	notify_volume
}

decrement_volume() {
	mprisctl -d 0.05
	notify_volume
}

seek_backward() {
	mprisctl -s -5000000
	notify_progress
}

seek_forward() {
	mprisctl -s 5000000
	notify_progress
}

toggle() {
	mprisctl -t
}

next_track() {
	mprisctl -n
	notify
}

previous_track() {
	mprisctl -p
	notify
}

next_player() {
	mprisctl -N
	notify
}

previous_player() {
	mprisctl -P
	notify
}

case "$1" in
--increment-volume) increment_volume ;;
--decrement-volume) decrement_volume ;;
--seek-backward) seek_backward ;;
--seek-forward) seek_forward ;;
--toggle) toggle ;;
--next-track) next_track ;;
--previous-track) previous_track ;;
--next-player) next_player ;;
--previous-player) previous_player ;;
--notify) notify ;;
--notify-progress) notify_progress ;;
esac
