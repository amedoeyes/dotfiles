#!/bin/bash

source "$XDG_BIN_HOME"/pactl_helpers.sh

DEVICE=""
TOGGLE=false
INCREMENT_VALUE=0
DECREMENT_VALUE=0
NOTIFY=false

get_icon_prefix() {
	if [[ $DEVICE == "sink" ]]; then
		printf "audio-volume"
	elif [[ $DEVICE == "source" ]]; then
		printf "microphone-sensitivity"
	else
		printf "Invalid device: %s\n" "$DEVICE" >&2
		exit 1
	fi
}

get_icon() {
	local -r icon_prefix=$(get_icon_prefix)
	local volume="$1"

	if "$(get_mute "$DEVICE")"; then
		printf "%s-muted-symbolic" "$icon_prefix"
		return
	fi

	if ((volume >= 66)); then
		printf "%s-high-symbolic" "$icon_prefix"
	elif ((volume >= 33)); then
		printf "%s-medium-symbolic" "$icon_prefix"
	elif ((volume >= 0)); then
		printf "%s-low-symbolic" "$icon_prefix"
	fi
}

increment() {
	set_volume $DEVICE "$INCREMENT_VALUE" +
}

decrement() {
	set_volume $DEVICE "$DECREMENT_VALUE" -
}

toggle() {
	set_mute $DEVICE toggle
}

notify() {
	local -r volume=$(get_volume "$DEVICE")
	local -r icon=$(get_icon "$volume")

	dunstify "Volume $volume%" -i "$icon" -u low -t 2000 -h int:value:"$volume" -r 999
}

display_help() {
	printf "Usage: audiocontrol DEVICE [OPTIONS]\n"
	printf "Control audio input and output devices.\n\n"
	printf "Options:\n"
	printf "  -i, --input [OPTIONS]     Control audio input device\n"
	printf "  -o, --output [OPTIONS]    Control audio output device\n"
	printf "  -h, --help                  Display this help and exit\n\n"
	printf "Device options:\n"
	printf "  -t, --toggle                Toggle mute\n"
	printf "  -i, --increment VALUE       Increment volume by VALUE\n"
	printf "  -d, --decrement VALUE       Decrement volume by VALUE\n"
	printf "  --notify                    Display volume notification\n\n"
}

device_help() {
	local flag=""
	local device=""

	if [[ $DEVICE == "sink" ]]; then
		flag="-o, --output"
		device="output"
	elif [[ $DEVICE == "source" ]]; then
		flag="-i, --input"
		device="input"
	fi

	printf "Usage: audiocontrol %s [OPTIONS]\n" "$flag"
	printf "Control %s audio device\n\n" "$device"
	printf "Options:\n"
	printf "  -t, --toggle             Toggle mute\n"
	printf "  -i, --increment VALUE    Increment volume by VALUE\n"
	printf "  -d, --decrement VALUE    Decrement volume by VALUE\n"
	printf "  --notify                 Display volume notification\n\n"
	printf "  -h, --help               Display this help and exit\n\n"
}

if [ "$#" -eq 0 ]; then
	display_help
	exit 1
fi

handle_device() {
	if [ "$#" -eq 0 ]; then
		device_help
		exit 1
	fi

	local -r options=$(getopt -o ti:d:nh --long toggle,increment:,decrement:,notify,help -n "audiocontrol" -- "$@")
	eval set -- "$options"
	while true; do
		case "$1" in
		-t | --toggle)
			TOGGLE=true
			shift
			;;
		-i | --increment)
			if ! [[ "$2" =~ ^[0-9]+$ ]]; then
				printf "Error: Invalid volume increment value.\n" >&2
				exit 1
			fi
			INCREMENT_VALUE="$2"
			shift 2
			;;
		-d | --decrement)
			if ! [[ "$2" =~ ^[0-9]+$ ]]; then
				printf "Error: Invalid volume increment value.\n" >&2
				exit 1
			fi
			DECREMENT_VALUE="$2"
			shift 2
			;;
		--notify)
			NOTIFY=true
			shift
			;;
		-h | --help)
			device_help
			exit 0
			;;
		--)
			shift
			break
			;;
		esac
	done
}

while true; do
	case "$1" in
	-i | --input)
		DEVICE="source"
		shift
		handle_device "$@"
		break
		;;
	-o | --output)
		DEVICE="sink"
		shift
		handle_device "$@"
		break
		;;
	-h | --help)
		display_help
		exit 0
		;;
	*)
		echo "Invalid option: $1" >&2
		exit 1
		;;
	esac
done

if [[ -z $DEVICE ]]; then
	printf "Error: No device specified.\n" >&2
	exit 1
fi

if $TOGGLE; then
	toggle
elif ((INCREMENT_VALUE > 0)); then
	increment
elif ((DECREMENT_VALUE > 0)); then
	decrement
fi

if $NOTIFY; then
	notify
fi
